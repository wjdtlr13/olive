<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wisdom">

	<insert id="insertWisdom" parameterType="com.olive.olive.wisdom.tree.Tree">
		insert into wisdom(num, userId, subject, content, created)
			values(wisdom_seq.nextval, #{userId},#{subject},#{content},sysdate)
	</insert>


	<sql id="where-list">
		<if test="condition=='all'">
			( INSTR(subject, #{keyword}) &gt; 0
				OR INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			INSTR(content, #{keyword}) &gt; 0  
		</if>
		<if test="condition=='userName'">
			userName=#{keyword}
		</if>
		<if test="condition=='created'">
			( TO_CHAR(p.created, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(p.created, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>
	
	<!-- 카테고리 리스트 -->
	<select id="listCategory" resultType="com.olive.olive.wisdom.tree.Tree">
		SELECT *
		FROM wisdomCategory
	</select>	
	
	<!-- 리스트에 뿌릴 데이터 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		select nvl(count(*),0)
		from wisdom w
		join member1 m on w.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="selected!=null">
				and selected='y'
			</if>
		</where>		
	</select>
	<update id="updateHitCount" parameterType="Integer">
		UPDATE wisdom SET hitcount=hitCount+1 WHERE num=#{num}
	</update>	
	<!-- 게시판 리스트 -->
	<select id="listWisdom" parameterType="map" resultType="com.olive.olive.wisdom.tree.Tree">
		select w.num,nickName, subject, w.saveFilename,w.categoryNum,hitCount,NVL(wisdomLikeCount, 0) wisdomLikeCount,
		to_char(created,'YYYY-MM-DD') created
		from wisdom w
		join member1 m on w.userId=m.userId
		left outer join wisdomCategory wc on w.categoryNum =wc.categoryNum
		left outer join(
			SELECT num, COUNT(*) wisdomLikeCount FROM WisdomLike 
			 where num=33
            GROUP BY num
		) a ON w.num = a.num	
		<!-- 
		left outer join (
			SELECT num, COUNT(*) replyCount FROM wisdomReply
			GROUP BY num
		) c ON w.num = c.num -->
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="where-list"/>
			</if>
			<if test="selected!=null">
				and selected='y'
			</if>					
		</where>         
		ORDER BY w.num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 게시물 읽기 -->
	<select id="readWisdom" parameterType="Integer" resultType="com.olive.olive.wisdom.tree.Tree">
		 select w.num, nickName, subject, content, hitCount, created, wisdomLikeCount
		 from wisdom w
		 join member1 m1 on w.userId=m1.userId
		 left outer join wisdomCategory wc on w.categoryNum =wc.categoryNum		 
		 left outer join (
		    select num, count(*) wisdomLikeCount from wisdomLike 
		    group by num
		 ) wl on w.num=wl.num
		where w.num=#{w.num}
	</select>
	
	<select id="preReadWisdom" parameterType="map" resultType="com.olive.olive.wisdom.tree.Tree">
		SELECT num, subject
		FROM wisdom w
		JOIN member1 m ON w.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="nextReadWisdom" parameterType="map" resultType="com.olive.olive.wisdom.tree.Tree">
		SELECT num, subject
		FROM wisdom w
		JOIN member1 m ON w.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>		
	
	<delete id="deleteWisdom" parameterType="Integer">
		DELETE FROM wisdom WHERE num = #{num}
	</delete>	
	
	
	
	
	
	
	<!-- 이미지 추가 -->
	<insert id="insertImg" parameterType="com.olive.olive.wisdom.tree.Tree">
		insert into WisdomImage(imageNum, num, imageFileName)
			values(WisdomImage_seq.nextval, #{num},#{imageFileName})
	</insert>
	
	<!-- 이미지 list -->
	<select id="listImg" parameterType="Integer" resultType="com.olive.olive.wisdom.tree.Tree">
		select imageNum, num, imageFileName
		from wisdomImage
		where num=#{num}
	</select>
	
	<!-- 이미지read -->
	<select id="readImg" parameterType="Integer" resultType="com.olive.olive.wisdom.tree.Tree">
		select imageNum, num, imageFileName
		from wisdomImage
		where num=#{num}
	</select>
	
	<!--이미지 삭제 -->
	<delete id="deleteImg" parameterType="map">
		delete from wisdomImage where ${num} = #{num}
	</delete>
	
	
	<!-- 게시글 좋아요 추가 -->
	<insert id="insertWisdomLike" parameterType="map" >
		insert into wisdomLike (num,userId, articleLike)
			values(#{num},#{userId},1)
	</insert>

	
	<!-- 열매게시판으로 옮길 수 있도록 selected 변경 -->
	<update id="updateSelected" parameterType="Integer">
		update wisdom set selected='y'
		where num=#{num}
	</update>
	
	
	
	
		<!-- 게시글 좋아요 개수 -->
	<select id="wisdomLikeCount" parameterType="Integer" resultType="Integer">
		select nvl(count(*),0)
		from wisdomLike where num=#{num}
	</select>
	
	<!-- 댓글 -->
	<insert id="insertReply" parameterType="com.olive.olive.wisdom.tree.Reply">
		INSERT INTO wisdomReply(replyNum, num, userId, content, answer, created)
			VALUES (wisdomReply_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{answer}, SYSDATE)
	</insert>
	
	<!-- 댓글 개수 -->
	<select id="replyCount" parameterType="map" resultType="Integer">
		select nvl(COUNT(*), 0) from wisdomReply
		where num=#{num} 
	</select>

	<!-- 댓글리스트 -->
	<select id="listReply" parameterType="map" resultType="com.olive.olive.wisdom.tree.Reply">
		select r.replyNum, r.userId, userName, num, content, r.created, 
		       nvl(likeCount, 0) likeCount
		FROM WisdomReply  r
		JOIN member1 m ON r.userId = m.userId
		LEFT OUTER JOIN (
			SELECT replyNum, COUNT(DECODE(replyLike, 1, 1)) likeCount
			FROM WisdomReplyLike GROUP BY replyNum
		) c ON r.replyNum = c.replyNum
		WHERE num=#{num} 
		ORDER BY r.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
		
	<!-- 댓글 좋아요 추가 -->
	<insert id="insertReplyLike" parameterType="map">
		insert into wisdomReplyLike(replyNum, userId, replyLike)
			values (#{replyNum}, #{userId}, #{replyLike})
	</insert>
	
	<!-- 댓글 좋아요 개수 -->
	<select id="replyLikeCount" parameterType="map" resultType="Integer">
		select count(DECODE(replyLike, 1, 1)) likeCount
		FROM wisdomReplyLike where replyNum = #{replyNum}
	</select>








</mapper> 