<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="free">
	<insert id="insertFree" parameterType="com.olive.olive.free.Free">
		INSERT INTO free(num, userId, subject, content,
	          saveFilename, originalFilename, hitCount, created, categoryNum, pointed) VALUES
	         (free_seq.NEXTVAL, #{userId}, #{subject}, #{content},
	           #{saveFilename, jdbcType=VARCHAR}, 
	           #{originalFilename, jdbcType=VARCHAR},
	           0, SYSDATE, 0, 0
	         )
	</insert>

	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
			   ( INSTR(subject, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'created' ">
			   ( TO_CHAR(created, 'YYYYMMDD') = #{keyword}
		          OR TO_CHAR(created, 'YYYY-MM-DD') = #{keyword} )
			</when>
			<when test="condition == 'content'">
			    DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="listCategory" resultType="com.olive.olive.free.Category">
		SELECT *
		FROM free_category
		order by num desc
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM free f
		JOIN member1 m ON f.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
			<if test="categoryNum!=null and categoryNum!='' ">
				categoryNum=${categoryNum}
			</if>
		</where> 
	</select>

	<select id="listFree" parameterType="map" resultType="com.olive.olive.free.Free">
		SELECT f.num, f.userId, nickName, subject, 
		       TO_CHAR(f.created, 'YYYY-MM-DD') created,
		       hitCount, saveFilename,
		       NVL(replyCount, 0) replyCount, categoryNum
		FROM free f
		JOIN member1 m ON f.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) replyCount FROM freeReply
			WHERE answer = 0
			GROUP BY num
		) c ON f.num = c.num
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="where-list"/>
			</if>
			<if test="categoryNum!=null and categoryNum!=''">
				categoryNum=${categoryNum}
			</if>
		</where>
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>

	<select id="readFree" parameterType="Integer" resultType="com.olive.olive.free.Free">
		SELECT f.num, f.userId, nickName, subject, content,
			   hitCount, TO_CHAR(f.created, 'YYYY-MM-DD') created,  saveFilename, originalFilename, categoryNum,
			   NVL(boardLikeCount, 0) boardLikeCount
		FROM free f
		JOIN member1 m ON f.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) boardLikeCount FROM freeLike
			GROUP BY num
		) fl ON f.num = fl.num
		WHERE f.num = #{num}
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE free SET hitCount=hitCount+1 WHERE num = #{num}
	</update>
	
	<select id="preReadFree" parameterType="map" resultType="com.olive.olive.free.Free">
		SELECT num, subject
		FROM free f
		JOIN member1 m ON f.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<select id="nextReadFree" parameterType="map" resultType="com.olive.olive.free.Free">
		SELECT num, subject
		FROM free f
		JOIN member1 m ON f.userId=m.userId
		<where>	
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<update id="updateFree" parameterType="com.olive.olive.free.Free">
		UPDATE free SET subject=#{subject}, content=#{content},
				saveFilename=#{saveFilename, jdbcType=VARCHAR},
				originalFilename=#{originalFilename, jdbcType=VARCHAR}
		WHERE num = #{num}
	</update>
      
	<delete id="deleteFree" parameterType="Integer">
		DELETE FROM free WHERE num = #{num}
	</delete>
      
	<insert id="insertFreeLike" parameterType="map">
		INSERT INTO freeLike(num, userId) VALUES (#{num}, #{userId})
	</insert>
      
	<select id="freeLikeCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM freeLike WHERE num=#{num}
	</select>
      
	<insert id="insertReply" parameterType="com.olive.olive.free.Reply">
		INSERT INTO freeReply(replyNum, num, userId, content, answer, created)
			VALUES (freeReply_seq.NEXTVAL, #{num}, #{userId}, #{content}, #{answer}, SYSDATE)
	</insert>

	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM freeReply
		WHERE num=#{num} AND answer=0
	</select>

	<select id="listReply" parameterType="map" resultType="com.olive.olive.free.Reply">
		SELECT r.replyNum, r.userId, nickName, num, content, r.created, 
		       NVL(answerCount, 0) answerCount,
		       NVL(likeCount, 0) likeCount
		FROM freeReply r
		JOIN member1 m ON r.userId = m.userId
		LEFT OUTER JOIN (
			SELECT answer, COUNT(*) answerCount
			FROM freeReply WHERE answer!=0 GROUP BY answer
		) f ON r.replyNum = f.answer
		LEFT OUTER JOIN (
			SELECT replyNum, COUNT(*) likeCount
			FROM freeReplyLike GROUP BY replyNum
		) l ON r.replyNum = l.replyNum
		WHERE num=#{num}  AND r.answer=0
		ORDER BY r.replyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM freeReply WHERE 
		<if test="mode=='reply' ">
			replyNum IN (
				SELECT replyNum FROM bbsReply
					START WITH replyNum=#{replyNum}
					CONNECT BY PRIOR replyNum = answer         
			)
		</if>
		<if test="mode=='answer' ">
			replyNum = #{replyNum}
		</if>
	</delete>

	<select id="listReplyAnswer" parameterType="Integer" resultType="com.olive.olive.free.Reply">
		SELECT replyNum, num, r.userId, nickName, content, created, answer
		FROM freeReply r
		JOIN member1 m ON r.userId = m.userId
		WHERE answer = #{answer}
		ORDER BY replyNum DESC
	</select>
	
	<select id="replyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM freeReply WHERE answer = #{answer}
	</select>
	
	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO freeReplyLike(replyNum, userId)
			VALUES (#{replyNum}, #{userId})
	</insert>
	
	<select id="replyLikeCount" parameterType="map" resultType="map">
		SELECT COUNT(*) likeCount
		FROM freeReplyLike WHERE replyNum = #{replyNum}
	</select>
</mapper>