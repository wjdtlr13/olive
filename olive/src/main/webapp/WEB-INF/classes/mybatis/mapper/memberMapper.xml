<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="loginMember" parameterType="String" resultType="com.olive.olive.member.Member">
		SELECT memberIdx, userId, userName, nickname, pwd, grade, created_date, modify_date, last_login
		FROM member1
		WHERE userId = #{userId} AND
		enabled != 0
	</select>

	<update id="updateLastLogin" parameterType="String">
		UPDATE member1 SET last_login = SYSDATE, failure_cnt = 0
		WHERE userId=#{userId}
	</update>

	<select id="memberidx_Seq" resultType="Long">
		SELECT memberidx_seq.NEXTVAL FROM dual
	</select>


	<insert id="insertMember1" parameterType="com.olive.olive.member.Member">
		INSERT INTO member1(memberIdx, userId, nickname, userName, 
			pwd, grade, gender, enabled, created_date, modify_date, failure_cnt)
		VALUES
			(#{memberIdx}, #{userId}, #{nickName}, #{userName}, #{pwd}, 1, 1, 1, SYSDATE,
			SYSDATE, 0)
	</insert>

	<insert id="insertMember2" parameterType="com.olive.olive.member.Member">
		INSERT INTO member2(userId, birth, email, tel, zip, addr1, addr2)
		VALUES (#{userId}, #{birth}, #{email}, #{tel},
		#{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR},
		#{addr2, jdbcType=VARCHAR})
	</insert>

	<update id="insertMember12"
		parameterType="com.olive.olive.member.Member">
		INSERT ALL
		INTO member1(memberIdx, userId, nickname, userName,
		pwd, grade, gender, enabled,
		created_date, modify_date, failure_cnt)
		VALUES (#{memberIdx}, #{userId}, #{nickName}, #{userName}, #{pwd}, 1, 1, 1, SYSDATE,
		SYSDATE, 0)
		INTO member2(userId, birth, email, tel, zip, addr1, addr2)
		VALUES (#{userId}, #{birth}, #{email}, #{tel},
		#{zip, jdbcType=VARCHAR}, #{addr1, jdbcType=VARCHAR},
		#{addr2, jdbcType=VARCHAR})
		SELECT * FROM dual
	</update>

	<select id="readMember" parameterType="String"
		resultType="com.olive.olive.member.Member">
		SELECT memberIdx, m1.userId, userName, nickName, pwd, enabled,
		created_date, modify_date, last_login,
		TO_CHAR(birth, 'YYYY-MM-DD') birth, email, tel,
		zip, addr1, addr2
		FROM member1 m1
		LEFT OUTER JOIN member2 m2 ON m1.userId =
		m2.userId
		WHERE m1.userId = #{userId}
	</select>
     
	<update id="updateMemberEnabled" parameterType="map">
		UPDATE member1
		SET enabled=#{enabled} WHERE userId=#{userId}
	</update>

	<update id="updateMember1"
		parameterType="com.olive.olive.member.Member">
		UPDATE member1 SET userPwd=#{userPwd},
		modify_date=SYSDATE
		WHERE userId=#{userId}
	</update>

	<update id="updateMember2"
		parameterType="com.olive.olive.member.Member">
		UPDATE member2 SET email=#{email, jdbcType=VARCHAR},
		tel=#{tel, jdbcType=VARCHAR}, birth=#{birth, jdbcType=VARCHAR},
		zip=#{zip, jdbcType=VARCHAR},
		addr1=#{addr1, jdbcType=VARCHAR}, addr2=#{addr2, jdbcType=VARCHAR}
		WHERE userId=#{userId}
	</update>

	<!-- member 테이블 정보 삭제 -->
	<delete id="deleteMember1" parameterType="String">
		DELETE FROM member1
		WHERE userId=#{userId}
	</delete>

	<delete id="deleteMember2" parameterType="String">
		DELETE FROM member2
		WHERE userId=#{userId}
	</delete>

</mapper>