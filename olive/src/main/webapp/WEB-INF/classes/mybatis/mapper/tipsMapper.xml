<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tips">
	
	<select id = "getAddress" parameterType="String" resultType="String">
		select addr1 from member2 where userId=#{userId}
	</select> 

	<insert id="insertTips" parameterType="com.olive.olive.tips.Tips">
		INSERT INTO tips(num, userId, subject, downLink, content,
			saveFilename, originalFilename, hitCount, created) VALUES
			(tips_seq.NEXTVAL, #{userId}, #{subject}, #{downLink, jdbcType=VARCHAR},#{content},
			#{saveFilename, jdbcType=VARCHAR},
			#{originalFilename, jdbcType=VARCHAR},
			0, SYSDATE
			)
	</insert>
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'all' ">
				( INSTR(subject, #{keyword}) &gt; 0
					OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'content'">
				DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM tips t
		JOIN member1 m ON t.userId=m.userId
		<where>
			<if test="keyword!=null and keyword!='' ">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="listTips" parameterType="map" resultType="com.olive.olive.tips.Tips">
		SELECT t.num, t.userId, userName, subject,
			TO_CHAR(t.created, 'YYYY-MM-DD') created,
			hitCount, saveFilename
		FROM tips t
		JOIN member1 m ON t.userId=m.userId
		<where>
			<if test="keyword != null and keyword != ''">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readTips" parameterType="Integer" resultType="com.olive.olive.tips.Tips">
		SELECT t.num, t.userId, userName, subject, downLink, content,
				hitCount, t.created, saveFilename, originalFilename,
				NVL(tipsLikeCount, 0) tipsLikeCount
		FROM tips t
		JOIN member1 m ON t.userId=m.userId
		LEFT OUTER JOIN (
			SELECT num, COUNT(*) tipsLikeCount FROM tipsLike
			GROUP BY num
		) tc ON t.num = tc.num
		WHERE t.num = #{num}
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE tips SET hitCount=hitCount+1 WHERE num=#{num}
	</update>
	
	<select id="preReadTips" parameterType="map" resultType="com.olive.olive.tips.Tips">
		SELECT num, subject
		FROM tips t
		JOIN member1 m ON t.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &gt; #{num})
		</where>
		ORDER BY num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="nextReadTips" parameterType="map" resultType="com.olive.olive.tips.Tips">
		SELECT num, subject
		FROM tips t
		JOIN member1 m ON t.userId=m.userId
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (num &lt; #{num})
		</where>
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateTips" parameterType="com.olive.olive.tips.Tips">
		UPDATE tips SET subject=#{subject}, downLink=#{downLink}, content=#{content},
				saveFilename=#{saveFilename, jdbcType=VARCHAR},
				originalFilename=#{originalFilename, jdbcType=VARCHAR}
		WHERE num=#{num}
	</update>
	
	<delete id="deleteTips" parameterType="Integer">
		DELETE FROM tips WHERE num=#{num}	
	</delete> 
	
	<insert id="insertTipsLike" parameterType="map">
		INSERT INTO tipsLike(num, userId) VALUES (#{num}, #{userId})
	</insert>
	
	<select id="tipsLikeCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM tipsLike WHERE num=#{num}
	</select>
	
</mapper>
